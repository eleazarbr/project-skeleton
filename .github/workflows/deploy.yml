name: Deploy to production

on:
  push:
    branches:
      - main

concurrency: production_environment

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['~16.*']
        npm-version: ['~8.19.*']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, zip, pdo_mysql, pdo_sqlite, mysqli, bcmath, exif, pcntl, gd, iconv
          tools: composer:v2, php-cs-fixer, phpmd, rector

      - name: Set up Node.js ${{ matrix.node-version }} and NPM ${{ matrix.npm-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          npm-version: ${{ matrix.npm-version }}

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install --no-scripts --no-interaction --no-progress --prefer-dist --optimize-autoloader

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install npm dependencies
        run: npm ci

      - name: Build front-end assets
        run: npm run build

      - name: PHP CS Fixer Dry Run
        run: composer php-cs-fixer-dry

      - name: PHP MD Run
        run: composer php-md

      - name: Run tests
        run: php artisan test --env=testing

  deploy:
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: Run Deployer
        uses: deployphp/action@v1
        with:
          dep: deploy
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          deployer-version: "7.3.0"
